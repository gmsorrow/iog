{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\iog\\\\web\\\\src\\\\pages\\\\services\\\\ServiceList.tsx\";\nimport React from 'react';\nimport ServiceItem from './ServiceItem';\nimport { filterServices } from './utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ServiceList = props => {\n  const {\n    services,\n    filter,\n    activatePromo\n  } = props;\n\n  if (!Array.isArray(services) || !services.length) {\n    return null;\n  }\n\n  const filteredServices = filterServices(services, filter);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: filteredServices.map(serviceItem => /*#__PURE__*/_jsxDEV(ServiceItem, {\n      serviceItem: serviceItem,\n      activatePromo: activatePromo\n    }, serviceItem.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }, this))\n  }, void 0, false);\n};\n\n_c = ServiceList;\nexport default ServiceList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ServiceList\");","map":{"version":3,"sources":["C:/projects/iog/web/src/pages/services/ServiceList.tsx"],"names":["React","ServiceItem","filterServices","ServiceList","props","services","filter","activatePromo","Array","isArray","length","filteredServices","map","serviceItem","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,cAAT,QAA+B,SAA/B;;;;AAQA,MAAMC,WAAW,GAAIC,KAAD,IAA6B;AAC/C,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,MAAZ;AAAoBC,IAAAA;AAApB,MAAsCH,KAA5C;;AAEA,MACE,CAACI,KAAK,CAACC,OAAN,CAAcJ,QAAd,CAAD,IACG,CAACA,QAAQ,CAACK,MAFf,EAGE;AACA,WAAO,IAAP;AACD;;AAED,QAAMC,gBAAgB,GAAGT,cAAc,CAACG,QAAD,EAAWC,MAAX,CAAvC;AAEA,sBACE;AAAA,cAEIK,gBAAgB,CAACC,GAAjB,CAAsBC,WAAD,iBACnB,QAAC,WAAD;AAEE,MAAA,WAAW,EAAEA,WAFf;AAGE,MAAA,aAAa,EAAEN;AAHjB,OACOM,WAAW,CAACC,EADnB;AAAA;AAAA;AAAA;AAAA,YADF;AAFJ,mBADF;AAaD,CAzBD;;KAAMX,W;AA2BN,eAAeA,WAAf","sourcesContent":["import React from 'react';\nimport { Service } from './types';\nimport ServiceItem from './ServiceItem';\nimport { filterServices } from './utils';\n\ninterface ServiceListProps {\n  services: Array<Service> | void;\n  filter: string;\n  activatePromo: (id: number) => void;\n}\n\nconst ServiceList = (props: ServiceListProps) => {\n  const { services, filter, activatePromo } = props;\n\n  if (\n    !Array.isArray(services)\n    || !services.length\n  ) {\n    return null;\n  }\n\n  const filteredServices = filterServices(services, filter);\n\n  return (\n    <>\n      {\n        filteredServices.map((serviceItem) => (\n          <ServiceItem\n            key={serviceItem.id}\n            serviceItem={serviceItem}\n            activatePromo={activatePromo}\n          />\n        ))\n      }\n    </>\n  );\n};\n\nexport default ServiceList;\n"]},"metadata":{},"sourceType":"module"}