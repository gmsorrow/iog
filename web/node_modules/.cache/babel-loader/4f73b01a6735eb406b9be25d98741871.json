{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\iog\\\\web\\\\src\\\\pages\\\\services\\\\ServicePage.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useQuery } from 'react-query';\nimport { useImmer } from 'use-immer';\nimport Input from '../../uikit/Input';\nimport { getServicesList } from '../../api/services';\nimport ServiceList from './ServiceList';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ServicePage = () => {\n  _s();\n\n  const [servicesFilter, setServicesFilter] = useState('');\n  const [services, setServices] = useImmer([]);\n\n  const resetFilter = () => {\n    setServicesFilter('');\n  };\n\n  const {\n    isLoading,\n    error,\n    data\n  } = useQuery('getServices', () => getServicesList(), {\n    onSuccess: response => {\n      if (!response.error) {\n        setServices(response.data);\n      }\n    }\n  });\n\n  const activatePromo = id => {};\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"Loading ...\"\n    }, void 0, false);\n  }\n\n  if (error || (data === null || data === void 0 ? void 0 : data.error)) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"Error loading services\"\n    }, void 0, false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"page-title\",\n      children: \"Services\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"service-block\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column mr8\",\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          label: \"FILTER\",\n          value: servicesFilter,\n          onChange: setServicesFilter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column mr8 flex-end\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"reset-button\",\n          onClick: resetFilter,\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ServiceList, {\n      services: services,\n      filter: servicesFilter,\n      activatePromo: activatePromo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ServicePage, \"rHjTPG4YKCP7IhXtHCFnKDZvuB0=\", false, function () {\n  return [useImmer, useQuery];\n});\n\n_c = ServicePage;\nexport default ServicePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ServicePage\");","map":{"version":3,"sources":["C:/projects/iog/web/src/pages/services/ServicePage.tsx"],"names":["React","useState","useQuery","useImmer","Input","getServicesList","ServiceList","ServicePage","servicesFilter","setServicesFilter","services","setServices","resetFilter","isLoading","error","data","onSuccess","response","activatePromo","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,QAAT,QAAyB,WAAzB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,SAASC,eAAT,QAAgC,oBAAhC;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;;AAGA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCR,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAiB,EAAjB,CAAxC;;AAEA,QAAMS,WAAW,GAAG,MAAM;AACxBH,IAAAA,iBAAiB,CAAC,EAAD,CAAjB;AACD,GAFD;;AAIA,QAAM;AACJI,IAAAA,SADI;AAEJC,IAAAA,KAFI;AAGJC,IAAAA;AAHI,MAIFb,QAAQ,CACV,aADU,EAEV,MAAMG,eAAe,EAFX,EAGV;AACEW,IAAAA,SAAS,EAAGC,QAAD,IAAc;AACvB,UAAI,CAACA,QAAQ,CAACH,KAAd,EAAqB;AACnBH,QAAAA,WAAW,CAACM,QAAQ,CAACF,IAAV,CAAX;AACD;AACF;AALH,GAHU,CAJZ;;AAgBA,QAAMG,aAAa,GAAIC,EAAD,IAAgB,CAErC,CAFD;;AAIA,MAAIN,SAAJ,EAAe;AACb,wBACE;AAAA;AAAA,qBADF;AAGD;;AAED,MAAIC,KAAK,KAAIC,IAAJ,aAAIA,IAAJ,uBAAIA,IAAI,CAAED,KAAV,CAAT,EAA0B;AACxB,wBACE;AAAA;AAAA,qBADF;AAGD;;AAED,sBACE;AAAA,4BACE;AAAM,MAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACE,QAAC,KAAD;AACE,UAAA,KAAK,EAAC,QADR;AAEE,UAAA,KAAK,EAAEN,cAFT;AAGE,UAAA,QAAQ,EAAEC;AAHZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA,+BACE;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,SAAS,EAAC,cAFZ;AAGE,UAAA,OAAO,EAAEG,WAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAoBE,QAAC,WAAD;AACE,MAAA,QAAQ,EAAEF,QADZ;AAEE,MAAA,MAAM,EAAEF,cAFV;AAGE,MAAA,aAAa,EAAEU;AAHjB;AAAA;AAAA;AAAA;AAAA,YApBF;AAAA,kBADF;AA4BD,CApED;;GAAMX,W;UAE4BJ,Q,EAU5BD,Q;;;KAZAK,W;AAsEN,eAAeA,WAAf","sourcesContent":["import React, { useState } from 'react';\nimport { useQuery } from 'react-query';\nimport { useImmer } from 'use-immer';\nimport Input from '../../uikit/Input';\nimport { getServicesList } from '../../api/services';\nimport ServiceList from './ServiceList';\nimport { Service } from './types';\n\nconst ServicePage = () => {\n  const [servicesFilter, setServicesFilter] = useState('');\n  const [services, setServices] = useImmer<Array<Service>>([]);\n\n  const resetFilter = () => {\n    setServicesFilter('');\n  };\n\n  const {\n    isLoading,\n    error,\n    data,\n  } = useQuery(\n    'getServices',\n    () => getServicesList(),\n    {\n      onSuccess: (response) => {\n        if (!response.error) {\n          setServices(response.data);\n        }\n      },\n    }\n  );\n\n  const activatePromo = (id: number) => {\n\n  };\n\n  if (isLoading) {\n    return (\n      <>Loading ...</>\n    );\n  }\n\n  if (error || data?.error) {\n    return (\n      <>Error loading services</>\n    );\n  }\n\n  return (\n    <>\n      <span className=\"page-title\">Services</span>\n      <div className=\"service-block\">\n        <div className=\"column mr8\">\n          <Input\n            label=\"FILTER\"\n            value={servicesFilter}\n            onChange={setServicesFilter}\n          />\n        </div>\n        <div className=\"column mr8 flex-end\">\n          <button\n            type=\"button\"\n            className=\"reset-button\"\n            onClick={resetFilter}\n          >\n            Reset\n          </button>\n        </div>\n      </div>\n      <ServiceList\n        services={services}\n        filter={servicesFilter}\n        activatePromo={activatePromo}\n      />\n    </>\n  );\n};\n\nexport default ServicePage;\n"]},"metadata":{},"sourceType":"module"}